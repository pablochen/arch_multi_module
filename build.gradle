//group = 'com.collet'
//version = '0.0.1-SNAPSHOT'

buildscript {
	ext {
		springBootVersion = '2.1.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE"
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	sourceCompatibility = 1.8

	repositories {
		mavenCentral()
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-batch'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
		implementation 'org.springframework.boot:spring-boot-starter-hateoas'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.kafka:spring-kafka'
		compileOnly 'org.projectlombok:lombok'
		runtimeOnly 'mysql:mysql-connector-java'
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.batch:spring-batch-test'
		testImplementation 'org.springframework.kafka:spring-kafka-test'
	}
}

project(':module-platform') {
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'io.jsonwebtoken:jjwt:0.9.1'
	}

}

project(':module-crawler') {
	dependencies {
		compile project(':module-crawler')
	}
}

project(':module-algorithm') {
	dependencies {
		compile project(':module-algorithm')
	}
}

project(':module-trade') {
	dependencies {
		compile project(':module-trade')
	}
}